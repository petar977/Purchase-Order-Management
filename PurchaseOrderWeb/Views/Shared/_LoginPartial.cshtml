@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a id="manage" class="nav-link link-light link-opacity-75-hover" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
        </li>
        @if (User.IsInRole(Roles.Role_Admin))
        {
            <li class="nav-item">
                <a class="nav-link link-light link-opacity-75-hover" id="register" asp-area="Identity" asp-page="/Account/Register">Register new user</a>
            </li>
        }

        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "PurchaseOrder", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link link-light link-opacity-75-hover border-0">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
    <a class="nav-link text-dark link-light" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
        <li class="nav-item">
            <a class="nav-link link-light link-opacity-75-hover" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
